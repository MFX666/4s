<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hmf.server.mapper.PartsStorageMapper">
    <resultMap id="PartsStorageVOMap" type="com.hmf.server.entity.VO.PartsStorageVO">
        <id property="id" column="id"/>
        <result property="partsNumber" column="parts_number"/>
        <result property="createtime" column="createtime"/>
        <result property="partsPrice" column="parts_price"/>
        <association property="parts" javaType="com.hmf.server.entity.Parts">
            <id property="id" column="id"/>
            <result property="partsName" column="parts_name"/>
            <result property="partsTag" column="parts_tag"/>
        </association>
        <association property="company" javaType="com.hmf.server.entity.Company">
            <id property="id" column="id"/>
            <result property="companyName" column="company_name"/>
            <result property="companyTelephone" column="company_telephone"/>
            <result property="companyAddress" column="company_address"/>
        </association>
        <association property="partsFactory" javaType="com.hmf.server.entity.PartsFactory">
            <id property="id" column="id"/>
            <result property="factoryAddress" column="factory_address"/>
            <result property="factoryName" column="factory_name"/>
            <result property="factoryTelephone" column="factory_telephone"/>
        </association>
    </resultMap>
    <insert id="insertPartsStorage">
        insert into t_parts_storage (factory_id,parts_number,parts_price,company_id,createtime,parts_id)
        select #{factoryId},#{partsNumber},#{partsPrice},#{companyId},#{createtime},#{parts_id} from dual
        where no exists (select id from t_parts_storage where company_id={companyId} and parts_number=#{partsNumber})
    </insert>
    <update id="updateEnableById" parameterType="java.util.ArrayList">
        update t_parts_storage set is_enable = 0
        where id in (
        <foreach collection="array" item="id" index="index" separator=",">
            #{id}
        </foreach>
        ) and is_enable != 0
    </update>
    <!--    <select id="getAllEnablePartsStorageInfo" resultMap="PartsStorageVOMap">-->
    <!--        select-->
    <!--        p.parts_name,-->
    <!--        p.parts_tag,-->
    <!--        pt.parts_price,-->
    <!--        c.company_name,-->
    <!--        c.company_address,-->
    <!--        c.company_telephone-->
    <!--        from t_parts_storage pt-->
    <!--        left join t_parts p on pt.parts_id = p.id-->
    <!--        left join t_company c on pt.company_id = c.id-->
    <!--        and pt.is_enable = 1;-->
    <!--    </select>-->
    <select id="searchParts" resultMap="PartsStorageVOMap" parameterType="com.hmf.server.model.PartsStorageSearchBody">
        select
        pt.id,
        pt.parts_number,
        p.parts_name,
        p.parts_tag,
        pt.parts_price,
        pt.createtime,
        c.company_name,
        c.company_address,
        c.company_telephone,
        pf.factory_name,
        pf.factory_address,
        pf.factory_telephone
        from t_parts_storage pt,join t_parts p,t_company c,t_parts_factory pf
        where
        pt.parts_id = p.id
        and pt.company_id = c.id
        adn pt.factory_id = pf.id
        <if test="companyId != null">
            and pt.company_id = #{companyId}
        </if>
        <if test="isEnable !=null">
            and pt.is_enable = #{isEnable}
        </if>
        <if test="partsName !=null">
            and p.parts_name like concat ('%',#{partsName},'%')
        </if>
        <if test="partsTag !=null">
            and p.parts_tag = #{partsTag}
        </if>
        <if test="companyName !=null">
            and c.company_name like concat ('%',#{companyName},'%')
        </if>
    </select>

</mapper>
